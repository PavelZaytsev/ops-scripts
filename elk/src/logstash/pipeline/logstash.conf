input {
  file {
    mode => "read"
    path => ["/usr/share/logstash/data/**/*.log"]
    codec => multiline {
      pattern => "^%{TIMESTAMP_ISO8601}"
      negate => true
      what => "previous"
    }
  }
}

filter {
  mutate {
    gsub => [
      # replace pipes with spaces
      "message", "\|", " ",
      # replace ansi with empties
      "message", "\x1B\[[0-?]*[ -/]*[@-~]", ""
    ]
  }

  grok {
    patterns_dir => ["/usr/share/logstash/patterns"]
    match => {"message" => "%{TIMESTAMP_ISO8601:ts}%{SPACE}%{LOGLEVEL:lvl}%{SPACE}%{THREAD:thread}%{SPACE}%{CLASS:class}%{SPACE}%{GREEDYDATA:msg}"}
  }

  if "log write:" in [message] {
    drop { }
  }

  date {
    locale => "en"
    match => ["ts", "ISO8601"]
    timezone => "Europe/Vienna"
    target => "@timestamp"
  }

  grok {
    match => {
      "path" => "%{GREEDYDATA}/%{GREEDYDATA:index_name}/%{IP:server}/%{GREEDYDATA:filename}\.log"
    }
  }

  mutate {
    remove_field => ["path", "filename", "host", "ts", "message"]
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => elastic
    password => changeme
    template => "/usr/share/logstash/templates/default.json"
    template_overwrite => true
    index => "%{index_name}"
  }
}
